{"version":3,"sources":["components/search/search-haystack.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["columnDefs","title","dataIndex","key","width","filtered","minWidth","SearchHaystack","useState","dataResponse","setDataResponse","onFinish","values","a","console","log","formValues","user","gender","major","languages","skills","axios","post","then","res","finalResponse","data","map","item","index","subItem","_source","span","offset","className","name","Item","label","type","htmlType","columns","dataSource","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAMMA,EAAa,CACf,CACIC,MAAO,aACPC,UAAW,aACXC,IAAK,aACLC,MAAO,KAEX,CACIH,MAAO,YACPC,UAAW,YACXC,IAAK,YACLC,MAAO,KAEX,CACIH,MAAO,SACPC,UAAW,SACXC,IAAK,SACLC,MAAO,IACPC,UAAU,GAEd,CACIJ,MAAO,UACPC,UAAW,aACXC,IAAK,aACLG,SAAU,MAMLC,EAA2B,WACpC,MAAwCC,mBAAgB,IAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACbC,QAAQC,IAAI,SACNC,EAAa,CAChB,cAAUJ,QAAV,IAAUA,OAAV,EAAUA,EAAQK,KAAKC,OACtB,aAASN,QAAT,IAASA,OAAT,EAASA,EAAQK,KAAKE,MACtB,iBAAaP,QAAb,IAAaA,OAAb,EAAaA,EAAQK,KAAKG,UAC1B,cAAUR,QAAV,IAAUA,OAAV,EAAUA,EAAQK,KAAKI,QAI3BC,IAAMC,KAAK,wCAAyCP,GAC/CQ,MAAK,SAACC,GACH,IACMC,EADOD,EAAIE,KAAKF,IACKG,KAAI,SAACC,EAAWC,GACvC,IAAMC,EAAUF,EAAKG,QAErB,OADAD,EAAQ5B,IAAM2B,EACPC,KAEXrB,EAAgBgB,MAlBX,2CAAH,sDAqBd,OAAO,qCACH,cAAC,IAAD,UACI,eAAC,IAAD,CAAKO,KAAM,GAAIC,OAAQ,EAAGC,UAAU,WAApC,UACI,0CACA,cAAC,IAAD,CAAKF,KAAM,GAAIC,OAAQ,EAAvB,SACI,eAAC,IAAD,CAAME,KAAK,gBAAgBzB,SAAUA,EAArC,UACI,cAAC,IAAK0B,KAAN,CAAWD,KAAM,CAAC,OAAQ,UAAWE,MAAM,SAA3C,SACI,cAAC,IAAD,MAGJ,cAAC,IAAKD,KAAN,CAAWD,KAAM,CAAC,OAAQ,YAAaE,MAAM,WAA7C,SACI,cAAC,IAAD,MAGJ,cAAC,IAAKD,KAAN,CAAWD,KAAM,CAAC,OAAQ,UAAWE,MAAM,SAA3C,SACI,cAAC,IAAD,MAGJ,cAAC,IAAKD,KAAN,CAAWD,KAAM,CAAC,OAAQ,SAAUE,MAAM,QAA1C,SACI,cAAC,IAAD,MAEJ,cAAC,IAAKD,KAAN,UACI,cAAC,IAAD,CAAQE,KAAK,UAAUC,SAAS,SAAhC,gCAQpB,cAAC,IAAD,CAAKL,UAAW,YAAhB,SACI,cAAC,IAAD,CAAKF,KAAM,GAAIC,OAAQ,EAAvB,SAEI,cAAC,IAAD,CACIO,QAASzC,EACT0C,WAAYjC,YCjFjBkC,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCKSS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0be87929.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {AgGridReact} from \"ag-grid-react\";\r\nimport axios from \"axios\";\r\nimport {Button, Col, Form, Input, InputNumber, Row, Table} from \"antd\";\r\nimport {AgAbstractField} from \"ag-grid-community\";\r\n\r\nconst columnDefs = [\r\n    {\r\n        title: 'Birth date',\r\n        dataIndex: 'birth_date',\r\n        key: 'birth_date',\r\n        width: 150,\r\n    },\r\n    {\r\n        title: 'File name',\r\n        dataIndex: 'file_name',\r\n        key: 'file_name',\r\n        width: 150\r\n    },\r\n    {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: 150,\r\n        filtered: true,\r\n    },\r\n    {\r\n        title: 'Content',\r\n        dataIndex: 'cv_content',\r\n        key: 'cv_content',\r\n        minWidth: 500,\r\n        // render: (value: string) => {\r\n        //     return value.replace(/[^a-zA-Z ]/g, \".\")\r\n        // }\r\n    }\r\n]\r\nexport const SearchHaystack: React.FC = () => {\r\n    const [dataResponse, setDataResponse] = useState<any[]>([])\r\n\r\n    const onFinish = async (values: any) => {\r\n        console.log(\"https\")\r\n        const formValues = {\r\n           'gender': values?.user.gender,\r\n            'major': values?.user.major,\r\n            'languages': values?.user.languages,\r\n            'skills': values?.user.skills,\r\n        }   \r\n\r\n        // setDataResponse(data)\r\n        axios.post('https://13.213.71.142/searchCvAdvance', formValues)\r\n            .then((res: any) => {\r\n                const data = res.data.res\r\n                const finalResponse = data.map((item: any, index: number) => {\r\n                    const subItem = item._source\r\n                    subItem.key = index\r\n                    return subItem\r\n                })\r\n                setDataResponse(finalResponse)\r\n            })\r\n    }\r\n    return <>\r\n        <Row>\r\n            <Col span={12} offset={6} className=\"fieldset\">\r\n                <h1>Haystack</h1>\r\n                <Col span={16} offset={4}>\r\n                    <Form name=\"nest-messages\" onFinish={onFinish}>\r\n                        <Form.Item name={['user', 'gender']} label=\"Gender\">\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name={['user', 'language']} label=\"Language\">\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name={['user', 'skills']} label=\"Skills\">\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name={['user', 'major']} label=\"Major\">\r\n                            <Input/>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Col>\r\n        </Row>\r\n        <Row className={\"row-table\"}>\r\n            <Col span={20} offset={2}>\r\n\r\n                <Table\r\n                    columns={columnDefs}\r\n                    dataSource={dataResponse}\r\n                    // loading={}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport './styles/styles.scss';\nimport {SearchHaystack} from \"./components/search/search-haystack\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchHaystack />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}